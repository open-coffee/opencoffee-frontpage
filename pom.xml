<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>rocks.coffeenet</groupId>
    <artifactId>coffeenet-starter-parent</artifactId>
    <version>0.38.2</version>
  </parent>

  <name>CoffeeNet Frontpage</name>
  <description>
    A modularized frontpage of the CoffeeNet with
    a plugin based system
  </description>

  <groupId>rocks.coffeenet</groupId>
  <artifactId>frontpage</artifactId>
  <version>0.6.0-SNAPSHOT</version>

  <issueManagement>
    <url>https://github.com/coffeenet/coffeenet-frontpage/issues</url>
    <system>GitHub Issues</system>
  </issueManagement>

  <scm>
    <url>https://github.com/coffeenet/coffeenet-frontpage</url>
    <connection>scm:git:git://github.com/coffeenet/coffeenet-frontpage.git</connection>
    <developerConnection>scm:git:git@github.com:coffeenet/coffeenet-frontpage.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <dependencies>
    <!-- CoffeeNet -->
    <dependency>
      <groupId>rocks.coffeenet</groupId>
      <artifactId>starter-logging</artifactId>
    </dependency>
    <dependency>
      <groupId>rocks.coffeenet</groupId>
      <artifactId>starter-discovery</artifactId>
    </dependency>
    <dependency>
      <groupId>rocks.coffeenet</groupId>
      <artifactId>starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>rocks.coffeenet</groupId>
      <artifactId>starter-monitoring</artifactId>
    </dependency>

    <!-- Frontend -->
    <dependency>
      <groupId>rocks.coffeenet</groupId>
      <artifactId>starter-navigation-thymeleaf</artifactId>
    </dependency>

    <!-- Plugin -->
    <dependency>
      <groupId>org.springframework.plugin</groupId>
      <artifactId>spring-plugin-core</artifactId>
    </dependency>

    <dependency>
      <groupId>rocks.coffeenet</groupId>
      <artifactId>frontpage-plugin-api</artifactId>
      <version>0.8.0</version>
    </dependency>

    <!-- Persistence -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-mongodb</artifactId>
    </dependency>

    <!-- DevTools -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>${hamcrest.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <layout>ZIP</layout>
        </configuration>
      </plugin>

      <!-- Integration tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <configuration>
              <systemPropertyVariables>
                <spring.data.mongodb.host>localhost</spring.data.mongodb.host>
                <spring.data.mongodb.port>${docker.mongo.port}</spring.data.mongodb.port>
                <spring.data.mongodb.username>frontpage</spring.data.mongodb.username>
                <spring.data.mongodb.password>frontpage</spring.data.mongodb.password>
                <spring.data.mongodb.database>admin</spring.data.mongodb.database>
              </systemPropertyVariables>
            </configuration>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Docker -->
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.33.0</version>
        <dependencies>
          <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>run-java-sh</artifactId>
            <version>1.3.8</version>
          </dependency>
        </dependencies>
        <configuration>
          <images>
            <image>
              <name>coffeenet/coffeenet-frontpage/coffeenet-frontpage</name>
              <build>
                <dockerFileDir>${project.basedir}</dockerFileDir>
                <assembly>
                  <descriptorRef>artifact</descriptorRef>
                </assembly>
                <tags>
                  <tag>${project.version}</tag>
                  <tag>latest</tag>
                </tags>
              </build>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <id>docker-prepare-integration-test</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>build</goal>
              <goal>start</goal>
            </goals>
            <configuration>
              <startParallel>true</startParallel>
              <images>
                <!-- MongoDB -->
                <image>
                  <name>mongo:latest</name>
                  <run>
                    <ports>
                      <port>docker.mongo.port:27017</port>
                    </ports>
                    <env>
                      <MONGO_INITDB_ROOT_USERNAME>frontpage</MONGO_INITDB_ROOT_USERNAME>
                      <MONGO_INITDB_ROOT_PASSWORD>frontpage</MONGO_INITDB_ROOT_PASSWORD>
                    </env>
                  </run>
                </image>
              </images>
            </configuration>
          </execution>
          <execution>
            <id>docker-stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
            <configuration>
              <removeVolumes>true</removeVolumes>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>coverage</id>
      <build>
        <plugins>

          <!-- Coverage -->
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.5</version>
            <executions>
              <execution>
                <id>default-prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>default-prepare-agent-integration</id>
                <goals>
                  <goal>prepare-agent-integration</goal>
                </goals>
              </execution>
              <execution>
                <id>default-report</id>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
              <execution>
                <id>default-report-integration</id>
                <goals>
                  <goal>report-integration</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <!-- sonar -->
          <plugin>
            <groupId>org.sonarsource.scanner.maven</groupId>
            <artifactId>sonar-maven-plugin</artifactId>
            <version>3.9.1.2184</version>
          </plugin>

        </plugins>
      </build>
    </profile>
  </profiles>
</project>

